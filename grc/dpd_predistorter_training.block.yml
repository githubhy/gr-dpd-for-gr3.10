id: dpd_predistorter_training
label: predistorter_training
category: '[dpd]'

templates:
  imports: from gnuradio import dpd
  make: dpd.predistorter_training(${dpd_params}, ${mode}, ${taps})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: dpd_params
  label: Dpd_params
  dtype: int_vector
- id: mode
  label: Predistorter Mode
  dtype: string
  default: "training"
  options: ["training", "static"]
  option_labels: [Training, Static]
- id: taps
  label: Predistorter Taps
  dtype: complex_vector 
  default: (1) 
  hide: ${ ('all' if mode == "training" else 'part') }
inputs:
- label: Input vector
  domain: stream
  dtype: complex
- label: taps
  domain: message
  id: taps
  optional: ${ (1 if mode == "static" else 0) }
outputs:
- label: Out/ PA_Input
  domain: stream
  dtype: complex
- label: Flag 
  domain: stream
  dtype: complex
  optional: true

file_format: 1
